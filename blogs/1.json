{
	"title": "Javascript then, now and tomorrow",
	"on": "AmeenAhmed on 30th April 2013",
	"summary": "<p>The eventual demise of Netscape Navigator in the aftermath of a huge assault by Microsoft Internet Explorer (IE) in the Browser Wars of the late 90s put JavaScript right in the middle of the front lines. If Twitter had been around then, #JS may have been the most popular hash tag!</p>",
	"content": "<img alt=\"Bloginline_javascript-logo\" class=\"featured\" src=\"http://d3hfxfzthphw0g.cloudfront.net/sbuploads/blog_article/image/226/blogInline_JavaScript-Logo.png\"><p>The eventual demise of Netscape Navigator in the aftermath of a huge assault by Microsoft Internet Explorer (IE) in the Browser Wars of the late 90s put JavaScript right in the middle of the front lines. If Twitter had been around then, #JS may have been the most popular hash tag!</p><p>JavaScript was created by Brenden Eich at Netscape in just 10 days. Developed under the codename Mocha, it officially came to life as \"LiveScript”. It was rushed to market to compete with IE, and the creators made some bad design decisions, affecting its performance adversely, but it did a good job with what it had. At the same time, Java Applets was developed. For a while, the conventional wisdom was that that Java was going to be the language of the web, but JavaScript emerged victorious. </p><p>Today, about 15 years after the invention of JavaScript, it has had a resurgence, with Google’s release of the super-charged v8 JavaScript engine. JavaScript broke the browser barrier and stepped into the server-side scripting ecosystem. Node became one of the most watched projects on Github. When Node gained traction in programming for the web, naysayers complained that JavaScript, primarily a language of the browser, would not work well for server-side scripting. Node, however, went viral among developers who started using it extensively. </p><p>The major argument against Node, that JavaScript is slow, was turned on its head with v8 turning out to be faster than Ruby and Python. The naysayers should have blamed the DOM instead of the JavaScript, and JavaScript Ninjas like Doug Crockford and others have debated this out of contention.</p><p>For a JavaScript lover like me, it’s exciting that all major browsers-- Chrome and FireFox specifically-- are working hard to make their Javascript engines faster than ever. JavaScript is also being used to create cross-platform mobile applications with frameworks like Titanium and PhoneGap. </p><p>As an intermediate language, many new programming languages such as CoffeeScript and TypeScript are targeting JavaScript as their target language. Even I was motivated to create a language called <a href=\"https://github.com/AmeenAhmed/choco-script\" target=\"_blank\">ChocoScript</a> which trans-compiles to JavaScript!</p><p>On another note, there has been a rush to create single page applications. These applications use JavaScript extensively and make use of Ajax rather than reloading whole pages. Powerful frameworks such as Backbone.js, Ember.js and the awesome Angular.js from Google have been developed to assist the developer in creating such applications.While these have been mostly for desktop browsers, increasingly we see JavaScript frameworks such as Sencha and JQuery becoming mainstream for mobile web development. </p><p>A developer today cannot afford to overlook JavaScript. JavaScript is breaking new ground in the desktop application space with <a href=\"https://github.com/rogerwang/node-webkit\" target=\"_blank\">Node-Webkit</a>. Node-Webkit combines Node and the Chromium project to provide a way to create desktop apps using web technologies. With the advent of HTML5, JavaScript has replaced Flash for creating rich interfaces and writing awesome games for the browser. </p><p>JavaScript's future looks very bright, and developers are finding new ways to use it. It would be a technology of reckoning if a new standalone, synchronous runtime with abundant libraries appears, to create a stable, scalable and super fast web framework. JavaScript promises to be the de-facto language of choice for server-side development and could could even replace Lua as a standard language for scripting games. </p><p>JavaScript has been a hot topic of discussion over the past 15 years, and I am confident that it will continue to be one in the future.</p>"
}